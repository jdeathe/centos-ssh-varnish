#!/usr/bin/env bash

# Create lock file
touch /var/lock/subsys/varnishd-wrapper

function set_varnish_vcl_conf ()
{
	local -r pattern_base64='^[A-Za-z0-9/+=]*$'
	local -r pattern_plain_text='.*vcl 4.0;.*'

	local value="${1:-}"

	if [[ -n ${value} ]] && [[ ! -s ${value} ]]; then
		# Decode base64 encoded values
		if [[ ${value} =~ ${pattern_base64} ]]; then
			value="$(
				base64 -d -i <<< "${value}"
			)"
		fi

		if [[ ! ${value} =~ ${pattern_plain_text} ]]; then
			printf -- \
				'ERROR: Invalid VCL File\n' \
				>&2
			sleep 0.1
			exit 1
		fi

		printf \
			-- '%s' \
			"${value}" \
		> /etc/services-config/varnish/docker-default.vcl

		unset VARNISH_VCL_CONF
	fi
}

set_varnish_vcl_conf "${VARNISH_VCL_CONF}"

readonly VARNISH_GROUP="varnish"
readonly VARNISH_SECRET_PATH="/etc/varnish/secret"
readonly VARNISH_USER="varnish"
readonly DAEMON_OPTS="-j unix,user=${VARNISH_USER},ccgroup=${VARNISH_GROUP}
 -F
 -P /var/run/varnish.pid
 -a 0.0.0.0:80
 -a 0.0.0.0:8443,PROXY
 -f ${VARNISH_VCL_CONF:-/etc/varnish/docker-default.vcl}
 -T 127.0.0.1:6082
 -t ${VARNISH_TTL:-120}
 -p thread_pool_min=${VARNISH_MIN_THREADS:-50}
 -p thread_pool_max=${VARNISH_MAX_THREADS:-1000}
 -p thread_pool_timeout=${VARNISH_THREAD_TIMEOUT:-120}
 -S ${VARNISH_SECRET_PATH}
 -s ${VARNISH_STORAGE:-file,/var/lib/varnish/varnish_storage.bin,1G}
"
readonly NICE="/bin/nice"
readonly NICENESS="${VARNISH_NICENESS:-10}"
readonly VARNISHD="/usr/sbin/varnishd"

# Ensure the secret PSK file is present.
if [[ ! -s ${VARNISH_SECRET_PATH} ]]
then
	printf -- \
		"Populating Varnish PSK secret file.\n" \
	sleep 0.1

	dd \
		if=/dev/random \
		of="${VARNISH_SECRET_PATH}" \
		count=1 \
	&> /dev/null

	chown \
		${VARNISH_USER}:${VARNISH_GROUP} \
		"${VARNISH_SECRET_PATH}"

	chmod \
		640 \
		"${VARNISH_SECRET_PATH}"
fi

printf -- \
	"Starting Varnish Cache: \n %s\n" \
	"${DAEMON_OPTS}"
	sleep 0.1

# Release lock file
rm -f /var/lock/subsys/varnishd-wrapper

exec ${NICE} \
	-n ${NICENESS} \
	${VARNISHD} \
	${DAEMON_OPTS}
